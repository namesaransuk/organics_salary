import 'dart:convert';

import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:flutter/material.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:get/get.dart';
import 'package:organics_salary/controllers/notification_controller.dart';
import 'package:organics_salary/main.dart';

class FirebaseMessagingHandler {
  static Map<String, dynamic>? pendingNotificationData;

  static Future<void> initialize() async {
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Firebase Messaging
    FirebaseMessaging messaging = FirebaseMessaging.instance;
    // RemoteMessage? initialMessage = await messaging.getInitialMessage();

    // ‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (iOS)
    await messaging.requestPermission(
      alert: true,
      badge: true,
      sound: true,
    );

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î Notification (Foreground)
    FirebaseMessaging.onMessage.listen((RemoteMessage message) {
      // ‡πÅ‡∏™‡∏î‡∏á Notification ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏û‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
      _showNotification(message);
    });

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î Notification (Background/Closed App)
    FirebaseMessaging.onMessageOpenedApp.listen((RemoteMessage message) {
      handleNotificationNavigation(message.data);
    });

    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Notification ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏û‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà (Terminate)
    RemoteMessage? initialMessage = await messaging.getInitialMessage();
    if (initialMessage != null) {
      pendingNotificationData = initialMessage.data;
      WidgetsBinding.instance.addPostFrameCallback((_) {
        Get.offAllNamed('/pin');
      });
      // handleNotificationNavigation(initialMessage.data);
    }
  }

  static Future<void> initializeNotifications() async {
    const AndroidInitializationSettings androidSettings =
        AndroidInitializationSettings('@mipmap/ic_launcher');

    const DarwinInitializationSettings iosSettings =
        DarwinInitializationSettings();

    // ‚úÖ Combine settings
    final InitializationSettings initializationSettings =
        InitializationSettings(
      android: androidSettings,
      iOS: iosSettings, // üëà ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
    );

    await flutterLocalNotificationsPlugin.initialize(
      initializationSettings,
      onDidReceiveNotificationResponse: (NotificationResponse response) {
        final payload = response.payload;
        print('Test payloadddddddddd ${payload}');

        if (payload != null) {
          final data = jsonDecode(payload);
          handleNotificationNavigation(
              data); // üëà ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å notification
        }
      },
      onDidReceiveBackgroundNotificationResponse: notificationTapBackground,
    );
  }

  @pragma('vm:entry-point')
  static void notificationTapBackground(NotificationResponse response) {
    final payload = response.payload;
    print('Test payloadddddddddd ${payload}');

    if (payload != null) {
      final data = jsonDecode(payload);
      handleNotificationNavigation(data);
    }
  }

  static void handleNotificationNavigation(Map<String, dynamic> data) async {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö payload ‡πÅ‡∏•‡∏∞‡∏ô‡∏≥‡∏ó‡∏≤‡∏á
    print('Test Notiiiiiiiiiiii ${data['route']}');
    if (data['route'] != null) {
      final NotificationController notificationController =
          Get.put(NotificationController());
      await notificationController.readUpdate(data['id']);
      Get.offAllNamed('/home');

      Future.delayed(Duration(milliseconds: 100), () {
        Get.toNamed(
          data['route'],
          arguments: data['module_id'] != null ? data['module_id'] : null,
        );
      });
    }
  }

  static void _showNotification(RemoteMessage message) async {
    final notification = message.notification;
    // final data = message.data;

    const AndroidNotificationDetails androidPlatformChannelSpecifics =
        AndroidNotificationDetails(
      'your_channel_id',
      'General Notifications',
      channelDescription: '‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ',
      importance: Importance.max,
      priority: Priority.high,
    );

    const NotificationDetails platformChannelSpecifics =
        NotificationDetails(android: androidPlatformChannelSpecifics);

    await flutterLocalNotificationsPlugin.show(
      0,
      notification?.title ?? '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô',
      notification?.body ?? '',
      platformChannelSpecifics,
      payload:
          jsonEncode(message.data), // üëà ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô‡∏Å‡∏î notification
    );
  }
}
